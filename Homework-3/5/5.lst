     1                                  section .data
     2 00000000 313233343530360A        	start_array: db '1', '2', '3', '4', '5', '0', '6', 10
     3                                  	end_array: equ $ - 2
     4                                  section .text
     5                                  	global _start
     6                                  _start:
     7 00000000 48BF-                   	mov rdi, end_array
     8 00000002 [0600000000000000] 
     9                                  
    10                                  outter_loop:
    11 0000000A 48BE-                   	mov rsi, start_array + 1
    12 0000000C [0100000000000000] 
    13                                  
    14                                  inner_loop:
    15 00000014 8A66FF                  	mov ah, [rsi - 1]
    16 00000017 8A06                    	mov al, [rsi]
    17                                  
    18 00000019 38C4                    	cmp ah, al
    19 0000001B 7202                    	jb swap
    20 0000001D EB07                    	jmp end_inner_loop
    21                                  
    22                                  swap:
    23 0000001F 8846FF                  	mov byte [rsi - 1], al
    24 00000022 8826                    	mov byte [rsi], ah
    25 00000024 EB00                    	jmp end_inner_loop
    26                                  
    27                                  end_inner_loop:
    28 00000026 48FFC6                  	inc rsi
    29 00000029 4839FE                  	cmp rsi, rdi
    30 0000002C 76E6                    	jbe inner_loop
    31 0000002E EB00                    	jmp end_outter_loop
    32                                  
    33                                  end_outter_loop:
    34 00000030 48FFCF                  	dec rdi
    35 00000033 4881FF[00000000]        	cmp rdi, start_array
    36 0000003A 75CE                    	jnz outter_loop
    37                                  
    38                                  print:
    39 0000003C B804000000              	mov rax, 4
    40 00000041 BB01000000              	mov rbx, 1
    41 00000046 48B9-                   	mov rcx, start_array
    42 00000048 [0000000000000000] 
    43 00000050 488D142508000000        	lea rdx, [end_array - start_array + 1 + 1]
    44 00000058 CD80                    	int 80H
    45                                  
    46                                  exit:
    47 0000005A B801000000              	mov rax, 1
    48 0000005F BB00000000              	mov rbx, 0
    49 00000064 CD80                    	int 80H
